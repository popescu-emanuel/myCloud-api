# Define 'Service' to expose Postgres to other services
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
    tier: database
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP

---
# Define a 'PVC' for Postgres Storage, dynamically provisioned by cluster
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
  labels:
    app: postgres
    tier: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
# Configure 'Deployment' of Postgres Server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
    tier: database
spec:
  selector:
    matchLabels:
      app: postgres
      tier: database
  strategy:
    type: Recreate
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
        tier: database
    spec:
      containers:
        - image: postgres
          name: postgres
          env:
            - name: POSTGRES_SERVICE
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: host

            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: name

            - name: POSTGRES_USER
              valueFrom:
                  secretKeyRef:
                    name: db-user
                    key: username

            - name: POSTGRES_PASSWORD
              valueFrom:
                  secretKeyRef:
                    name: db-user
                    key: password

          ports:
            - containerPort: 5432
              name: postgres

          volumeMounts:
            - name: mycloud-pgdata
              mountPath: /var/lib/postgresql/data

      restartPolicy: Always
      volumes:
        - name: mycloud-pgdata
          persistentVolumeClaim:
            claimName: postgres-pv-claim

