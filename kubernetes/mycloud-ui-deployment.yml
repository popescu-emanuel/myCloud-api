apiVersion: apps/v1 # For versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:   # Data that helps  uniquely identify the object (using name, UID and namespace)          
  name: mycloud-ui
spec:  # What state you desire for the object              
  selector:  # The selector field defines how the deployment finds which pod to manage       
    matchLabels:
      app: mycloud-ui
  replicas: 3  # Tells the deployment to run 3 pods matching the template      
  template:
    metadata:
      labels:  # Labels are used as indentifying attributes for objects such as pods and replication controller.      
        app: mycloud-ui
    spec:
      containers:
        - name: mycloud-ui
          image: popescuemanuel24/mycloud-ui:1.0.0
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          env:
            - name: ANGULAR_SERVICE
              valueFrom:
                configMapKeyRef:
                  name: fe-configmap
                  key: host
            - name: KUBERNETES_HOST
              valueFrom:
                configMapKeyRef:
                  name: be-configmap
                  key: kubernetes-host
---
apiVersion: v1
kind: Service
metadata:
  name: mycloud-ui-service
  labels:
    name: mycloud-ui
spec:
  ports:
    - nodePort: 30170 # make the service available to network requests from external clients
      port: 80        # access the service via external port no
      targetPort: 80  # port number that container listening on
      protocol: TCP
  selector:
    app: mycloud-ui
  type: NodePort     # which expose the application on a port across a each of your nodes
