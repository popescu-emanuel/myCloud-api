## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.application.name=mycloud-api
spring.profiles.active=

# Kubernetes
spring.datasource.url=jdbc:postgresql://${POSTGRES_SERVICE}:5432/${POSTGRES_DB_NAME}
spring.datasource.username=${POSTGRES_DB_USER}
spring.datasource.password=${POSTGRES_DB_PASSWORD}

# Kubernetes Properties
kubernetes.angular-service=${ANGULAR_SERVICE}
kubernetes.host=${KUBERNETES_HOST}
kubernetes.api-port=30163
kubernetes.ui-port=30170

# Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=true
spring.jpa.show-sql=false
server.error.whitelabel.enabled=false

# JWT Properties
cloud.app.jwt.secret=${JWT_SECRET}
cloud.app.jwt.expiration-ms=86400000

#myCloud.app.jwtExpirationMs=60000

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=215MB

file.upload-dir=${KEYS_PATH}
file.keys-dir=${STORAGE_PATH}

## Logging Properties
logging.level.fmi.unibuc.mycloud.MyCloudApplicationTests.=WARN

spring.main.banner-mode=off

#SSL Self-Signed Certificate configuration
#server.ssl.enabled=true
#
## The format used for the keystore. It could be set to JKS in case it is a JKS file
#server.ssl.key-store-type=PKCS12
## The path to the keystore containing the certificate
#server.ssl.key-store=classpath:keystore/mycloud.p12
## The password used to generate the certificate
#server.ssl.key-store-password=changeit
## The alias mapped to the certificate
#server.ssl.key-alias=mycloud

management.endpoints.web.exposure.include=env,info,health,httptrace,logfile,metrics,mappings
